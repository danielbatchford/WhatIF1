<Application
    x:Class="WhatIfF1.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:WhatIfF1.UI.Converters"
    xmlns:local="clr-namespace:WhatIfF1"
    ShutdownMode="OnMainWindowClose"
    StartupUri="UI/Windows/MainWindow.xaml">
    <Application.Resources>
        <FontFamily x:Key="regularFont">Resources/Fonts/Formula1-Regular.otf #Formula1 Display Regular</FontFamily>
        <FontFamily x:Key="boldFont">Resources/Fonts/Formula1-Bold.otf #Formula1 Display Bold</FontFamily>
        <FontFamily x:Key="wideFont">Resources/Fonts/Formula1-Wide.otf #Formula1 Display Wide</FontFamily>
        <converters:IsNotNullConverter x:Key="isNotNullConverter" />
        <converters:ColorToBrushConverter x:Key="colorToBrushConverter" />
        <converters:InverseBoolConverter x:Key="inverseBoolConverter" />
        <converters:IsNotNullToVisConverter x:Key="isNotNullToVisConverter" />
        <converters:BoolToCollapsedVisConverter x:Key="boolToCollapsedVisConverter" />
        <converters:BoolToHiddenVisConverter x:Key="boolToHiddenVisConverter" />
        <converters:InverseBoolToHiddenVisConverter x:Key="inverseBoolToHiddenVisConverter" />
        <converters:ScenarioTypeToStringConverter x:Key="scenarioTypeToStringConverter" />
        <converters:ToFormattedTimeConverter x:Key="toFormattedTimeConverter" />
        <converters:MsToSecConverter x:Key="msToSecConverter" />
        <converters:SecToMsConverter x:Key="secToMsConverter" />
        <converters:DriverMapPointToPointsConverter x:Key="driverMapPointToPointsConverter" />
        <converters:ToIntConverter x:Key="toIntConverter" />
        <SolidColorBrush x:Key="mainColor" Color="Firebrick" />
        <SolidColorBrush x:Key="lightColor" Color="LightGray" />
        <Thickness
            x:Key="defaultMargin"
            Bottom="5"
            Left="5"
            Right="5"
            Top="5" />
        <DataTemplate x:Key="markerItemTemplate">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" MinWidth="90" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Rectangle
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Height="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    Fill="{Binding Color, Converter={StaticResource colorToBrushConverter}}">
                    <Rectangle.OpacityMask>
                        <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1,0.5">
                            <GradientStop Offset="0" Color="Black" />
                            <GradientStop Offset="1" Color="Transparent" />
                        </LinearGradientBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>
                <Ellipse
                    Grid.Row="0"
                    Grid.Column="0"
                    Width="30"
                    Height="30"
                    Margin="{StaticResource defaultMargin}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding TrackMarkerIconFilePath}" Stretch="Fill" />
                    </Ellipse.Fill>
                </Ellipse>
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="{StaticResource defaultMargin}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource boldFont}"
                    Foreground="{StaticResource lightColor}"
                    Text="{Binding DisplayName}" />
                <StackPanel
                    Grid.Row="0"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Orientation="Vertical">
                    <TextBlock
                        FontFamily="{StaticResource regularFont}"
                        Foreground="{StaticResource lightColor}"
                        Text="{Binding SupportingTextA}" />
                    <TextBlock
                        FontFamily="{StaticResource regularFont}"
                        Foreground="{StaticResource lightColor}"
                        Text="{Binding SupportingTextB}" />
                </StackPanel>

            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="scenarioItemTemplate">
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="2" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <StackPanel
                    Grid.Row="0"
                    Grid.Column="0"
                    Orientation="Horizontal">
                    <Ellipse
                        Width="8"
                        Height="8"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Fill="{StaticResource mainColor}"
                        StrokeThickness="0"
                        Visibility="{Binding IsModelLoaded, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToCollapsedVisConverter}}" />
                    <TextBlock
                        Margin="5"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontFamily="{StaticResource regularFont}"
                        Text="{Binding EventName}" />
                    <StackPanel.ContextMenu>
                        <ContextMenu>
                            <MenuItem
                                Grid.Row="1"
                                Grid.Column="0"
                                Command="{Binding LoadRaceCommand}">
                                <MenuItem.Header>
                                    <TextBlock Text="{Binding ScenarioType, Converter={StaticResource scenarioTypeToStringConverter}, StringFormat=Load {0}}" />
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem
                                Grid.Row="0"
                                Grid.Column="0"
                                Command="{Binding RemoveScenarioCommand}">
                                <MenuItem.Header>
                                    <TextBlock Text="{Binding ScenarioType, Converter={StaticResource scenarioTypeToStringConverter}, StringFormat=Remove {0}}" />
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem
                                Grid.Row="1"
                                Grid.Column="0"
                                Command="{Binding CloneScenarioCommand}">
                                <MenuItem.Header>
                                    <TextBlock Text="{Binding ScenarioType, Converter={StaticResource scenarioTypeToStringConverter}, StringFormat=Clone {0}}" />
                                </MenuItem.Header>
                            </MenuItem>
                        </ContextMenu>
                    </StackPanel.ContextMenu>
                </StackPanel>
                <Rectangle
                    Grid.Row="1"
                    Grid.Column="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Fill="{Binding SecondaryColor, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource colorToBrushConverter}}">
                    <Rectangle.OpacityMask>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Offset="0" Color="Black" />
                            <GradientStop Offset="0.8" Color="Transparent" />
                        </LinearGradientBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="driverStandingsTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="85" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="23" />
                </Grid.RowDefinitions>
                <Rectangle
                    Grid.Row="0"
                    Grid.Column="0"
                    Width="4"
                    Margin="5"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Stretch"
                    Fill="{Binding Driver.Constructor.Color, Converter={StaticResource colorToBrushConverter}}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource boldFont}"
                    Foreground="{StaticResource lightColor}"
                    Text="{Binding RacePosition, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="{StaticResource defaultMargin}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource boldFont}"
                    Text="{Binding Driver.DriverLetters, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="2"
                    Margin="{StaticResource defaultMargin}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource regularFont}"
                    Opacity="{Binding TimingScreenTextOpacity}"
                    Text="{Binding TimingScreenText, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="3"
                    Margin="{StaticResource defaultMargin}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource boldFont}"
                    Foreground="{Binding TireCompound.ScreenColor, Converter={StaticResource colorToBrushConverter}}"
                    Text="{Binding TireCompound.ScreenCharacter, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="tabItemTemplate">
            <StackPanel>
                <TextBlock
                    Margin="{StaticResource defaultMargin}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="{Binding}" />
            </StackPanel>
        </DataTemplate>
        <ControlTemplate x:Key="Slider" TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="Slider.DecreaseLarge">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="SnapsToDevicePixels" Value="true" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Border
                                                    x:Name="decreaseBorder"
                                                    Height="10"
                                                    Background="{StaticResource mainColor}"
                                                    BorderThickness="0"
                                                    Opacity="0.5"
                                                    SnapsToDevicePixels="True" />
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="decreaseBorder" Property="Opacity" Value="1" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb>
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="SnapsToDevicePixels" Value="true" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Rectangle
                                                    x:Name="rectangle"
                                                    Width="10"
                                                    Height="25"
                                                    Fill="{StaticResource mainColor}" />
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="rectangle" Property="Fill" Value="White" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="Slider.IncreaseLarge">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="Focusable" Value="false" />
                                    <Setter Property="IsTabStop" Value="false" />
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="SnapsToDevicePixels" Value="true" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Border
                                                    x:Name="increaseBorder"
                                                    Height="10"
                                                    Background="{StaticResource lightColor}"
                                                    BorderThickness="0"
                                                    Opacity="0.5" />
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="increaseBorder" Property="Opacity" Value="1" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>
        <Style x:Key="horizSlider" TargetType="Slider">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
