<sf:ChromelessWindow
    x:Class="WhatIfF1.UI.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WhatIfF1"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sf="http://schemas.syncfusion.com/wpf"
    xmlns:sfskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    sfskin:SfSkinManager.Theme="{sfskin:SkinManagerExtension ThemeName=MaterialDark,
                                                             FluentHoverEffectMode=BackgroundAndBorder,
                                                             FluentPressedEffectMode=Reveal}"
    Icon="Icons/favicon.png"
    KeyDown="MainWindow_KeyDown"
    Loaded="MainWindow_Loaded"
    ResizeBorderThickness="0"
    ResizeMode="NoResize"
    ShowIcon="False"
    TitleBarBackground="{StaticResource mainColor}"
    TitleBarForeground="White"
    UseNativeChrome="True"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="100" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <Grid
            Grid.Row="0"
            Grid.Column="0"
            DataContext="{Binding ActiveScenario, UpdateSourceTrigger=PropertyChanged}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="2" />
            </Grid.RowDefinitions>

            <Grid
                Grid.Row="0"
                Grid.Column="0"
                Visibility="{Binding Path=., Converter={StaticResource isNotNullToVisConverter}}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>

                <Image
                    Grid.Row="0"
                    Grid.Column="0"
                    Width="130"
                    Margin="10,10,0,10"
                    HorizontalAlignment="Left"
                    Source="{Binding Track.FlagFilePath}" />

                <Grid Grid.Row="0" Grid.Column="1">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="10,5,0,0"
                        FontFamily="{StaticResource boldFont}"
                        FontSize="30"
                        Text="{Binding EventName}" />

                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="10,0,0,0"
                        FontFamily="{StaticResource regularFont}"
                        FontSize="20"
                        Text="{Binding Track.TrackName}" />

                    <Grid Grid.Row="2" Grid.Column="0">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="10,5,0,0"
                            FontFamily="{StaticResource boldFont}"
                            FontSize="15"
                            FontStyle="Italic"
                            Text="{Binding EventDate.Year, StringFormat={}{0}  |}" />

                        <TextBlock
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="0,5,0,0"
                            FontFamily="{StaticResource regularFont}"
                            FontSize="15"
                            Text="{Binding Track.LocationName, StringFormat={}  {0}  |  Round}" />

                        <TextBlock
                            Grid.Row="0"
                            Grid.Column="2"
                            Margin="5"
                            FontFamily="{StaticResource boldFont}"
                            FontSize="15"
                            FontStyle="Italic"
                            Text="{Binding Round}" />

                    </Grid>

                </Grid>

                <Grid
                    Grid.Row="0"
                    Grid.Column="2"
                    Height="50"
                    Margin="0,0,10,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>


                    <Button
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="{StaticResource defaultMargin}"
                        Background="{StaticResource mainColor}"
                        Command="{Binding AboutRaceCommand}"
                        Content="About Race"
                        FontFamily="{StaticResource boldFont}"
                        FontSize="15"
                        IsEnabled="{Binding WikipediaLink, Converter={StaticResource isNotNullConverter}}" />


                    <Button
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="{StaticResource defaultMargin}"
                        Background="{StaticResource mainColor}"
                        Command="{Binding LoadRaceCommand}"
                        IsEnabled="{Binding IsModelLoading, Converter={StaticResource inverseBoolConverter}}">
                        <Button.Content>
                            <TextBlock
                                FontFamily="{StaticResource boldFont}"
                                FontSize="15"
                                Text="{Binding ScenarioType, Converter={StaticResource scenarioTypeToStringConverter}, StringFormat=Load {0}}" />
                        </Button.Content>
                    </Button>

                    <Button
                        Grid.Row="0"
                        Grid.Column="2"
                        Margin="{StaticResource defaultMargin}"
                        Background="{StaticResource lightColor}"
                        Command="{Binding CloneScenarioCommand}"
                        FontSize="15">
                        <Button.Content>
                            <Image
                                Width="15"
                                Height="15"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="Icons/Copy.png" />
                        </Button.Content>
                    </Button>

                    <Button
                        Grid.Row="0"
                        Grid.Column="3"
                        Margin="{StaticResource defaultMargin}"
                        Background="{StaticResource lightColor}"
                        Command="{Binding RemoveScenarioCommand}"
                        FontSize="15">
                        <Button.Content>
                            <Image
                                Width="15"
                                Height="15"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="Icons/Cross.png" />
                        </Button.Content>
                    </Button>

                </Grid>

            </Grid>

            <Rectangle
                Grid.Row="1"
                Grid.Column="0"
                Height="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
                Fill="{Binding PrimaryColor, UpdateSourceTrigger=PropertyChanged, FallbackValue={StaticResource mainColor}, Converter={StaticResource colorToBrushConverter}}" />

        </Grid>

        <Grid Grid.Row="1" Grid.Column="0">

            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <sf:SfAccordion
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                SelectedIndex="0"
                SelectionMode="ZeroOrMore">

                <sf:SfAccordion.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock
                            FontFamily="{StaticResource boldFont}"
                            Foreground="White"
                            Text="{Binding}" />
                    </DataTemplate>
                </sf:SfAccordion.HeaderTemplate>

                <sf:SfAccordionItem Header="Browse Scenarios">

                    <Grid>

                        <!--  Hack to auto expand this accordian item  -->
                        <TextBlock Text="" Visibility="Hidden" />
                        <ListView
                            x:Name="ScenariosListView"
                            HorizontalContentAlignment="Stretch"
                            ItemTemplate="{StaticResource scenarioItemTemplate}"
                            ItemsSource="{Binding Scenarios, UpdateSourceTrigger=PropertyChanged}"
                            ScrollViewer.VerticalScrollBarVisibility="Hidden"
                            SelectedItem="{Binding ActiveScenario, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            SelectionMode="Single" />

                    </Grid>

                </sf:SfAccordionItem>

                <sf:SfAccordionItem Header="Manage Scenario" />

            </sf:SfAccordion>

            <sf:SfGridSplitter
                Grid.Row="0"
                Grid.Column="1"
                Width="10"
                HorizontalAlignment="Stretch"
                EnableCollapseButton="True"
                ResizeBehavior="PreviousAndNext" />

            <Grid
                x:Name="ModelGrid"
                Grid.Row="0"
                Grid.Column="2"
                DataContext="{Binding ActiveScenario, UpdateSourceTrigger=PropertyChanged}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="150" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="280" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>

                    <Image
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Opacity="0.1"
                        Source="{Binding Track.FlagFilePath}"
                        Stretch="UniformToFill">
                        <Image.OpacityMask>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="Transparent" />
                                    <GradientStop Offset="1" Color="Black" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Image.OpacityMask>
                        <Image.Effect>
                            <BlurEffect KernelType="Gaussian" Radius="100" />
                        </Image.Effect>
                    </Image>

                    <Border
                        Grid.Row="0"
                        Grid.Column="0"
                        Width="220"
                        Height="600"
                        Margin="40,40,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        BorderBrush="{StaticResource mainColor}"
                        BorderThickness="10,10,0,0"
                        CornerRadius="15,0,0,0">
                        <Border.OpacityMask>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="Black" />
                                    <GradientStop Offset="1.2" Color="Transparent" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.OpacityMask>
                    </Border>

                    <Grid
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="50,50,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Panel.ZIndex="1">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>

                        <Grid
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="10">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <Image
                                Grid.Row="0"
                                Grid.Column="0"
                                Width="70"
                                Source="pack://application:,,,/Resources/F1Logo.png" />

                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                FontFamily="{StaticResource wideFont}"
                                FontSize="20"
                                Foreground="{StaticResource lightColor}"
                                Text="{Binding ScenarioType, Converter={StaticResource scenarioTypeToStringConverter}}" />

                        </Grid>

                        <ListView
                            x:Name="DriverOrderGrid"
                            Grid.Row="1"
                            Grid.Column="0"
                            HorizontalContentAlignment="Stretch"
                            ItemTemplate="{StaticResource driverStandingsTemplate}"
                            ItemsSource="{Binding EventController.Standings}"
                            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                            SelectedItem="{Binding EventController.SelectedStanding, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            SelectionMode="Single" />

                    </Grid>

                    <Grid Grid.Row="0" Grid.Column="1">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="50" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="250" />
                        </Grid.ColumnDefinitions>

                        <Grid
                            x:Name="trackMapGrid"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="40"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">

                            <Polygon
                                Grid.Row="0"
                                Grid.Column="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Fill="Transparent"
                                Points="{Binding EventController.MapProvider.TrackPoints}"
                                Stretch="None"
                                Stroke="White"
                                StrokeThickness="12" />

                            <Canvas
                                Grid.Row="0"
                                Grid.Column="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <ItemsControl
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    ItemsSource="{Binding EventController.MapProvider.DriverPoints}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas Background="Transparent" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="{x:Type ContentPresenter}">
                                            <Setter Property="Canvas.Left" Value="{Binding Path=Point.X, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Setter Property="Canvas.Top" Value="{Binding Path=Point.Y, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                FontFamily="{StaticResource boldFont}"
                                                FontSize="15"
                                                IsEnabled="{Binding IsNotRunning, Converter={StaticResource inverseBoolConverter}}"
                                                Opacity="{Binding Path=Opacity, UpdateSourceTrigger=PropertyChanged}"
                                                Text="{Binding Path=Driver.DriverLetters}">
                                                <TextBlock.RenderTransform>
                                                    <TranslateTransform X="20" Y="-10" />
                                                </TextBlock.RenderTransform>
                                                <TextBlock.Effect>
                                                    <DropShadowEffect
                                                        BlurRadius="5"
                                                        Opacity="0.6"
                                                        Color="Black" />
                                                </TextBlock.Effect>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    ItemsSource="{Binding EventController.MapProvider.DriverPoints}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas Background="Transparent" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="{x:Type ContentPresenter}">
                                            <Setter Property="Canvas.Left" Value="{Binding Path=Point.X, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Setter Property="Canvas.Top" Value="{Binding Path=Point.Y, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Ellipse
                                                Width="30"
                                                Height="30"
                                                Fill="{Binding Path=Color, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource colorToBrushConverter}}"
                                                IsEnabled="{Binding IsNotRunning, Converter={StaticResource inverseBoolConverter}}"
                                                Opacity="{Binding Path=Opacity, UpdateSourceTrigger=PropertyChanged}"
                                                Stroke="Black"
                                                StrokeThickness="3">
                                                <Ellipse.RenderTransform>
                                                    <TranslateTransform X="-15" Y="-15" />
                                                </Ellipse.RenderTransform>
                                            </Ellipse>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Canvas>

                        </Grid>

                        <Grid
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="0,40,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <Border
                                Grid.RowSpan="2"
                                Width="200"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                BorderBrush="{StaticResource mainColor}"
                                BorderThickness="10,10,0,0"
                                CornerRadius="15,0,0,0">

                                <StackPanel Orientation="Vertical">
                                    <StackPanel
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Margin="10"
                                        HorizontalAlignment="Left"
                                        Orientation="Horizontal">

                                        <TextBlock
                                            FontFamily="{StaticResource boldFont}"
                                            FontSize="20"
                                            Text="{Binding EventController.CurrentLap, UpdateSourceTrigger=PropertyChanged, StringFormat=Lap {0}/}" />

                                        <TextBlock
                                            FontFamily="{StaticResource boldFont}"
                                            FontSize="20"
                                            Text="{Binding EventController.Model.NoOfLaps}" />

                                    </StackPanel>

                                    <StackPanel
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="10"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal">

                                        <TextBlock
                                            FontFamily="{StaticResource boldFont}"
                                            FontSize="20"
                                            Text="{Binding EventController.CurrentTime, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource toFormattedTimeConverter}}" />

                                    </StackPanel>
                                </StackPanel>


                            </Border>

                        </Grid>

                        <Grid
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <Button
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="{StaticResource defaultMargin}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                Command="{Binding EventController.PlayPauseCommand}"
                                Foreground="Transparent"
                                IsEnabled="{Binding IsModelLoaded, UpdateSourceTrigger=PropertyChanged}">
                                <Button.Content>
                                    <Grid>

                                        <Ellipse
                                            Width="30"
                                            Height="30"
                                            Fill="{StaticResource mainColor}"
                                            Visibility="{Binding EventController.Playing, Converter={StaticResource inverseBoolToHiddenVisConverter}}" />
                                        <Image
                                            Width="15"
                                            Height="15"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Source="Icons/Play.ico"
                                            Visibility="{Binding EventController.Playing, Converter={StaticResource inverseBoolToHiddenVisConverter}}" />
                                        <Ellipse
                                            Width="30"
                                            Height="30"
                                            Fill="{StaticResource lightColor}"
                                            Visibility="{Binding EventController.Playing, Converter={StaticResource boolToHiddenVisConverter}}" />
                                        <Image
                                            Width="15"
                                            Height="15"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Source="Icons/Pause.ico"
                                            Visibility="{Binding EventController.Playing, Converter={StaticResource boolToHiddenVisConverter}}" />
                                    </Grid>
                                </Button.Content>
                            </Button>

                            <sf:SfRangeSlider
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="10,0,20,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                ActiveMinorTickStroke="{StaticResource mainColor}"
                                ActiveTrackStyle="{StaticResource activeTrackStyle}"
                                InactiveTrackStyle="{StaticResource inactiveTrackStyle}"
                                Maximum="{Binding EventController.Model.TotalTime, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource msToSConverter}}"
                                Minimum="0"
                                MinorTickFrequency="10"
                                Orientation="Horizontal"
                                ShowRange="False"
                                SnapsTo="StepValues"
                                StepFrequency="1"
                                ThumbStyle="{StaticResource thumbStyle}"
                                ThumbToolTipPlacement="TopLeft"
                                ThumbToolTipPrecision="0"
                                TickFrequency="60"
                                TickPlacement="BottomRight"
                                Value="{Binding EventController.CurrentTime, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource msToSConverter}}" />
                        </Grid>
                    </Grid>
                </Grid>

                <Grid
                    Grid.Row="1"
                    Grid.Column="0"
                    IsEnabled="{Binding EventController.SelectedStanding, Converter={StaticResource isNotNullConverter}}">

                    <Rectangle
                        Height="2"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Fill="{StaticResource lightColor}" />

                    <Image
                        Grid.Row="1"
                        Grid.Column="0"
                        Width="1000"
                        Margin="{StaticResource defaultMargin}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        DataContext="{Binding EventController.SelectedStanding, UpdateSourceTrigger=PropertyChanged}"
                        Source="{Binding Driver.Constructor.ImagePath}"
                        Stretch="UniformToFill"
                        Visibility="{Binding Path=., Converter={StaticResource isNotNullToVisConverter}}">
                        <Image.Effect>
                            <BlurEffect KernelType="Gaussian" Radius="100" />
                        </Image.Effect>
                        <Image.OpacityMask>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Offset="0" Color="Transparent" />
                                <GradientStop Offset="1" Color="Black" />
                            </LinearGradientBrush>
                        </Image.OpacityMask>
                    </Image>

                    <TabControl
                        Grid.Row="1"
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Background="Transparent"
                        BorderThickness="0"
                        TabStripPlacement="Left">

                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <Border>
                                                <Grid>
                                                    <Grid>
                                                        <Border
                                                            x:Name="border"
                                                            Width="150"
                                                            Height="36"
                                                            Background="Transparent"
                                                            BorderThickness="0" />

                                                    </Grid>
                                                    <ContentPresenter
                                                        Margin="{StaticResource defaultMargin}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        ContentSource="Header"
                                                        TextElement.FontFamily="{StaticResource boldFont}"
                                                        TextElement.FontSize="12"
                                                        TextElement.FontWeight="SemiBold"
                                                        TextElement.Foreground="White" />
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="border" Property="Background" Value="{StaticResource lightColor}" />
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="border" Property="Background" Value="{StaticResource mainColor}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.Resources>

                        <TabItem
                            DataContext="{Binding EventController.SelectedStanding, UpdateSourceTrigger=PropertyChanged}"
                            Header="Summary"
                            HeaderTemplate="{StaticResource tabItemTemplate}">

                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <Rectangle
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Width="2"
                                    Margin="20,5,20,5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Stretch"
                                    Fill="{StaticResource lightColor}">
                                    <Rectangle.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.5, 0" EndPoint="0.5,1">
                                            <GradientStop Offset="0.1" Color="Transparent" />
                                            <GradientStop Offset="0.5" Color="Black" />
                                            <GradientStop Offset="0.9" Color="Transparent" />
                                        </LinearGradientBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>

                                <Border
                                    Grid.Row="0"
                                    Grid.RowSpan="4"
                                    Grid.Column="1"
                                    Margin="0,10,20,10"
                                    BorderBrush="{Binding Driver.Constructor.Color, Converter={StaticResource colorToBrushConverter}}"
                                    BorderThickness="3">


                                    <Button BorderThickness="0" Command="{Binding Driver.AboutDriverCommand}">
                                        <Button.Content>
                                            <Image Source="{Binding Driver.ImagePath}" Stretch="Fill" />
                                        </Button.Content>
                                    </Button>

                                </Border>

                                <Grid Grid.Column="2">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>


                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        Margin="0,18,0,0"
                                        FontFamily="{StaticResource boldFont}"
                                        FontSize="30"
                                        Text="{Binding Driver.Name}" />

                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Margin="0,5,0,0"
                                        FontFamily="{StaticResource boldFont}"
                                        FontSize="20"
                                        Text="{Binding Driver.Constructor.Name, UpdateSourceTrigger=PropertyChanged}" />


                                    <TextBlock
                                        Grid.Row="2"
                                        Grid.Column="2"
                                        Margin="0,5,0,0"
                                        FontFamily="{StaticResource wideFont}"
                                        FontSize="30"
                                        FontStyle="Italic"
                                        Text="{Binding RacePosition, UpdateSourceTrigger=PropertyChanged, StringFormat=P{0}}" />

                                </Grid>

                                <Rectangle
                                    Grid.Row="0"
                                    Grid.Column="3"
                                    Width="2"
                                    Margin="20,5,20,5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Stretch"
                                    Fill="{StaticResource lightColor}">
                                    <Rectangle.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.5, 0" EndPoint="0.5,1">
                                            <GradientStop Offset="0.1" Color="Transparent" />
                                            <GradientStop Offset="0.5" Color="Black" />
                                            <GradientStop Offset="0.9" Color="Transparent" />
                                        </LinearGradientBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>

                                <Grid
                                    Grid.Row="0"
                                    Grid.Column="4"
                                    Margin="{StaticResource defaultMargin}"
                                    VerticalAlignment="Center">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Margin="{StaticResource defaultMargin}"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        FontFamily="{StaticResource regularFont}"
                                        FontSize="20"
                                        Text="Gap To Lead:" />
                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="{StaticResource defaultMargin}"
                                        VerticalAlignment="Center"
                                        FontFamily="{StaticResource regularFont}"
                                        FontSize="20"
                                        FontStyle="Italic"
                                        Text="{Binding GapToLead, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource toFormattedTimeConverter}}" />

                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="{StaticResource defaultMargin}"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        FontFamily="{StaticResource regularFont}"
                                        FontSize="20"
                                        Text="Gap To Next Car:" />
                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Margin="{StaticResource defaultMargin}"
                                        VerticalAlignment="Center"
                                        FontFamily="{StaticResource regularFont}"
                                        FontSize="20"
                                        FontStyle="Italic"
                                        Text="{Binding GapToNextCar, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource toFormattedTimeConverter}}" />

                                    <TextBlock
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        Margin="{StaticResource defaultMargin}"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        FontFamily="{StaticResource regularFont}"
                                        FontSize="20"
                                        Text="Tyre Compound:" />

                                    <TextBlock
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Margin="{StaticResource defaultMargin}"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        FontFamily="{StaticResource regularFont}"
                                        FontSize="20"
                                        Foreground="{Binding TireCompound.ScreenColor, Converter={StaticResource colorToBrushConverter}}"
                                        Text="{Binding TireCompound.ScreenName}" />

                                </Grid>

                                <Rectangle
                                    Grid.Row="0"
                                    Grid.Column="5"
                                    Width="2"
                                    Margin="20,5,20,5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Stretch"
                                    Fill="{StaticResource lightColor}">
                                    <Rectangle.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.5, 0" EndPoint="0.5,1">
                                            <GradientStop Offset="0.1" Color="Transparent" />
                                            <GradientStop Offset="0.5" Color="Black" />
                                            <GradientStop Offset="0.9" Color="Transparent" />
                                        </LinearGradientBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>

                                <Grid
                                    Grid.Row="0"
                                    Grid.Column="6"
                                    Margin="{StaticResource defaultMargin}"
                                    VerticalAlignment="Center">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Margin="{StaticResource defaultMargin}"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        FontFamily="{StaticResource regularFont}"
                                        FontSize="20"
                                        Text="Velocity:" />
                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="{StaticResource defaultMargin}"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        FontFamily="{StaticResource regularFont}"
                                        FontSize="20"
                                        FontStyle="Italic"
                                        Text="{Binding Velocity, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} KPH, Converter={StaticResource toIntConverter}}" />

                                </Grid>

                                <Rectangle
                                    Grid.Row="0"
                                    Grid.Column="7"
                                    Width="2"
                                    Margin="20,5,20,5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Stretch"
                                    Fill="{StaticResource lightColor}">
                                    <Rectangle.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.5, 0" EndPoint="0.5,1">
                                            <GradientStop Offset="0.1" Color="Transparent" />
                                            <GradientStop Offset="0.5" Color="Black" />
                                            <GradientStop Offset="0.9" Color="Transparent" />
                                        </LinearGradientBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>


                            </Grid>

                        </TabItem>

                        <TabItem Header="Pace" HeaderTemplate="{StaticResource tabItemTemplate}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>

                                <sf:SfChart
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="{StaticResource defaultMargin}">
                                    <sf:SfChart.PrimaryAxis>
                                        <sf:NumericalAxis Header="{Binding EventController.VelocityLapGraphProvider.Graph.XTitle, UpdateSourceTrigger=PropertyChanged}" />
                                    </sf:SfChart.PrimaryAxis>
                                    <sf:SfChart.SecondaryAxis>
                                        <sf:NumericalAxis Header="{Binding EventController.VelocityLapGraphProvider.Graph.YTitle, UpdateSourceTrigger=PropertyChanged}" />
                                    </sf:SfChart.SecondaryAxis>
                                    <sf:FastLineSeries
                                        Interior="{StaticResource mainColor}"
                                        ItemsSource="{Binding EventController.VelocityLapGraphProvider.Graph.Data, UpdateSourceTrigger=PropertyChanged}"
                                        Stroke="{StaticResource mainColor}"
                                        XBindingPath="XValue"
                                        YBindingPath="YValue" />
                                </sf:SfChart>
                            </Grid>
                        </TabItem>

                        <TabItem Header="Tyres" HeaderTemplate="{StaticResource tabItemTemplate}" />

                        <TabItem Header="Traffic" HeaderTemplate="{StaticResource tabItemTemplate}" />

                    </TabControl>
                </Grid>

            </Grid>

        </Grid>

        <Grid
            x:Name="LogBarGrid"
            Grid.Row="2"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{Binding CurrentColor, UpdateSourceTrigger=PropertyChanged, FallbackValue=Transparent, Converter={StaticResource colorToBrushConverter}}">

            <Rectangle
                Grid.Row="2"
                Grid.Column="0"
                Height="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Fill="{StaticResource mainColor}" />

            <TextBlock
                Margin="{StaticResource defaultMargin}"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding CurrentMessage, UpdateSourceTrigger=PropertyChanged}" />

        </Grid>

    </Grid>



</sf:ChromelessWindow>
